{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C =  -635.0409780195442 B =  34.168963659119086 A =  -0.4040976597062032\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "%matplotlib inline\n",
    "\n",
    "\n",
    "#Create arrays for your data\n",
    "yave = np.array([72.4,81.12,93.1,81.2,75.8])\n",
    "theta = np.array ([48.55,45.55,42.55,39.55,36.55])\n",
    "\n",
    "#Create an array for your y-axis uncertainties\n",
    "yave_unc = np.array([1.469,2.122,1.372,1.468,0.896])\n",
    "\n",
    "#Reassign variables\n",
    "x = theta\n",
    "y = yave\n",
    "dy = yave_unc\n",
    "\n",
    "#size the plot\n",
    "plt.figure(figsize=(15,10))\n",
    "\n",
    "#create scatter plot\n",
    "plt.scatter(x, y, color='blue', marker='o')\n",
    "\n",
    "#create labels\n",
    "plt.xlabel('$\\\\theta$ (degrees)')\n",
    "plt.ylabel('$y_{mean}$ (m)')\n",
    "plt.title('Height on wall vs Launcher Angle')\n",
    "\n",
    "#fitting to a 2nd degree polynomial\n",
    "c,b,a=np.polynomial.polynomial.polyfit(x,y,2,w=dy)\n",
    "\n",
    "#Annotate with values of A, B, C from best fit polynomial\n",
    "plt.annotate('A = {value:.{digits}E}'.format(value=a, digits=3),\n",
    "             (0.05, 0.9), xycoords='axes fraction')\n",
    "\n",
    "plt.annotate('B = {value:.{digits}E}'.format(value=b, digits=3),\n",
    "             (0.05, 0.85), xycoords='axes fraction')\n",
    "             \n",
    "plt.annotate('C = {value:.{digits}E}'.format(value=c, digits=3),\n",
    "             (0.05, 0.8), xycoords='axes fraction')\n",
    "#Create fit line\n",
    "xnew = np.linspace(x.min(), x.max(), 300)\n",
    "fit = a*xnew**2 + b*xnew +c\n",
    "\n",
    "plt.scatter(xnew, fit, color='red')\n",
    "plt.show()\n",
    "\n",
    "print (\"C = \",c , \"B = \",b, \"A = \",a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
